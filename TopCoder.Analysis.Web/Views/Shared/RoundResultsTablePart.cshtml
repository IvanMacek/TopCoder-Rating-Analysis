@using TopCoder.Analysis.Data
@model IEnumerable<RoundResult>

@if (Model.Any())
{
    <table>
        <thead>
            <tr>
                <th> Row count: </th>  
                <th> @Model.Count() </th>  
            </tr>
            <tr>
                <th class="round-col"> Round </th>  
                <th class="coder-col"> Coder </th>  
                <th> Div </th>  
                <th> Div Coders </th>  
                <th> Rank </th>  
                <th> Relative Rank </th>  
                <th> Points </th>  
                <th> Rated Rounds </th>  
                <th> TC Volatility </th>  
                <th> TC Old </th>  
                <th> TC New </th>  
                <th> TC Diff </th>  
                <th> ELO Old </th>  
                <th> ELO New </th>  
                <th> ELO Diff </th>  
            </tr>
        </thead>

        <tbody>
        @foreach (var rr in Model)
        {
            var divCodersCount = (rr.Division == 1) ? rr.Round.DivOneCodersCount : rr.Round.DivTwoCodersCount;
            var relativePlace = 100.0 * rr.DivisionPlace / divCodersCount;
                
            <tr @Html.Raw(rr.IsRated ? string.Empty : @"class=""ui-state-disabled"" title=""Unrated round""")>
                
                <td class="round-col"> @Html.ActionLink(rr.Round.Name, "Single", "Rounds", new { roundId = rr.Round.Id }, null) </td>
                <td class="coder-col"> @Html.ActionLink(rr.Coder.Handle, "Single", "Coders", new { handle = rr.Coder.Handle }, null) </td>  
                <td> @rr.Division </td>
                <td> @divCodersCount </td>
                <td> @rr.DivisionPlace </td>
                <td> @relativePlace.ToString("0.##") % </td>
                <td> @ColorCoding.GoodBad(rr.Points, 1) </td>
                <td> @rr.NumberOfRatings</td>

                <td class="rating"> @rr.Tc_NewVolatility </td>
                <td class="rating"> @ColorCoding.RatingClass(rr.Tc_OldRating) </td>
                <td class="rating"> @ColorCoding.RatingClass(rr.Tc_NewRating) </td>
                <td> @ColorCoding.GoodBad(rr.Tc_RatingDiff, 0) </td>

                <td class="rating"> @ColorCoding.RatingClass(rr.Elo_OldRating) </td>
                <td class="rating"> @ColorCoding.RatingClass(rr.Elo_NewRating) </td>
                <td> @ColorCoding.GoodBad(@rr.Elo_RatingDiff, 0) </td>

            </tr>
        }   
        </tbody>
    </table> 
}
else
{
    <p> List is empty. </p>
}