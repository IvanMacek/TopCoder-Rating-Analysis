@model TopCoder.Analysis.Web.Models.Rounds.SingleModel
@{
    ViewBag.Title = "Round " + Model.Round.Name;

    var sortedDiv1Results = Model.RoundResults.Where(x => x.Division == 1).OrderByDescending(x => x.OldRating).ToList();
    var sortedDiv2Results = Model.RoundResults.Where(x => x.Division == 2).OrderByDescending(x => x.OldRating).ToList();

    var bucketedDiv1Ratings = Model.RoundResults.Where(x => x.Division == 1).GroupBy(x => x.OldRating / 100).Select(g => new { Bucket = g.Key * 100, Count = g.Count() }).OrderBy(x => x.Bucket).ToList();
    var bucketedDiv2Ratings = Model.RoundResults.Where(x => x.Division == 2).GroupBy(x => x.OldRating / 100).Select(g => new { Bucket = g.Key * 100, Count = g.Count() }).OrderBy(x => x.Bucket).ToList();

    var bucketedDiv1Vols = Model.RoundResults.Where(x => x.Division == 1).GroupBy(x => x.OldVolatility / 20).Select(g => new { Bucket = g.Key * 20, Count = g.Count() }).OrderBy(x => x.Bucket).ToList();
    var bucketedDiv2Vols = Model.RoundResults.Where(x => x.Division == 2).GroupBy(x => x.OldVolatility / 20).Select(g => new { Bucket = g.Key * 20, Count = g.Count() }).OrderBy(x => x.Bucket).ToList();
}

<script type="text/javascript">
    var initCharts = function (div, erDataTable, ratDataTable, volDataTable) {

        var erChart = new google.visualization.ScatterChart(document.getElementById('erChart' + div));

        var erData = new google.visualization.DataTable();
        erData.addColumn('number', 'Index');
        erData.addColumn('number', 'Rank from sorted rating');
        erData.addColumn('number', 'Expected Rank');
        erData.addRows(erDataTable);
        
        erChart.draw(erData, { pointSize: 1, title: 'Expected rank vs rank' });
        
        
        var ratChart = new google.visualization.AreaChart(document.getElementById('ratChart' + div));

        var ratData = new google.visualization.DataTable();
        ratData.addColumn('number', 'Rating');
        ratData.addColumn('number', 'Count');
        ratData.addRows(ratDataTable);
        
        ratChart.draw(ratData, { pointSize: 2, title: 'Ratings distribution' });
        

        var volChart = new google.visualization.AreaChart(document.getElementById('volChart' + div));

        var volData = new google.visualization.DataTable();
        volData.addColumn('number', 'Volatility');
        volData.addColumn('number', 'Count');
        volData.addRows(volDataTable);
        
        volChart.draw(volData, { pointSize: 2, title: 'Volatility distribution' });
    };
    

    $(function () {

        var erData1 = [
            @foreach (var rr in sortedDiv1Results.Select((x, i) => new { X = x, I = i })) {
                <text> [@rr.I, @rr.I, @rr.X.Tc_ExpectedRank.ToString().Replace(",", ".")] </text>@(rr.X != sortedDiv1Results.Last() ? "," : string.Empty)
            }
        ];
        
        var erData2 = [
            @foreach (var rr in sortedDiv2Results.Select((x, i) => new { X = x, I = i })) {
                <text> [@rr.I, @rr.I, @rr.X.Tc_ExpectedRank.ToString().Replace(",", ".")] </text>@(rr.X != sortedDiv2Results.Last() ? "," : string.Empty)
            }
        ];
        
        var ratData1 = [
            @foreach (var x in bucketedDiv1Ratings) {
                <text> [@x.Bucket, @x.Count] </text>@(x != bucketedDiv1Ratings.Last() ? "," : string.Empty)
            }
        ];
        
        var ratData2 = [
            @foreach (var x in bucketedDiv2Ratings) {
                <text> [@x.Bucket, @x.Count] </text>@(x != bucketedDiv2Ratings.Last() ? "," : string.Empty)
            }
        ];
        
        var volData1 = [
            @foreach (var x in bucketedDiv1Vols) {
                <text> [@x.Bucket, @x.Count] </text>@(x != bucketedDiv1Vols.Last() ? "," : string.Empty)
            }
        ];
        
        var volData2 = [
            @foreach (var x in bucketedDiv2Vols) {
                <text> [@x.Bucket, @x.Count] </text>@(x != bucketedDiv2Vols.Last() ? "," : string.Empty)
            }
        ];

        initCharts(1, erData1, ratData1, volData1);
        initCharts(2, erData2, ratData2, volData2);

        $('.round-col').remove();
    });
</script>

<h2>Round @Model.Round.Name</h2>

@{ Html.RenderPartial("RoundsTablePart", new [] { Model.Round }); }

<div class="clearfix">
    
    <div style="width: 49%; float: right;">
        <h3>Div 2 Round Results</h3>
        
        <div id="ratChart2" style="width: 70%; height: 200px;"></div>
        <div id="volChart2" style="width: 70%; height: 200px;"></div>
        <div id="erChart2" style="width: 70%; height: 200px;"></div>

        @{ Html.RenderPartial("RoundResultsTablePart", Model.RoundResults.Where(rr => rr.Division == 2)); }
    </div>

    <div style="width: 49%;">
        <h3>Div 1 Round Results</h3>
        
        <div id="ratChart1" style="width: 70%; height: 200px;"></div>
        <div id="volChart1" style="width: 70%; height: 200px;"></div>
        <div id="erChart1" style="width: 70%; height: 200px;"></div>

        @{ Html.RenderPartial("RoundResultsTablePart", Model.RoundResults.Where(rr => rr.Division == 1)); }
    </div>

</div>
