@model TopCoder.Analysis.Web.Models.Coders.SingleModel
@{
    ViewBag.Title = "Coder " + Model.Coder.Handle;
}
<script type="text/javascript">
    $(function () {
        var dashboard = new google.visualization.Dashboard(document.getElementById('dashboard'));

        var control = new google.visualization.ControlWrapper({
            controlType: 'ChartRangeFilter',
            containerId: 'control',
            options: {
                filterColumnIndex: 0,
                ui: {
                    chartType: 'LineChart',
                    chartOptions: { pointSize: 1 },
                    chartView: { columns: [0, 1, 2] },
                    minRangeSize: 86400000 // 1 day in milliseconds = 24 * 60 * 60 * 1000 = 86,400,000
                }
            }
        });

        var ratingsChart = new google.visualization.ChartWrapper({
            chartType: 'LineChart',
            containerId: 'ratingsChart',
            options: { pointSize: 4, title: 'TC & ELO Ratings' },
            view: { columns: [0, 1, 2]}
        });
        
        var volatilityChart = new google.visualization.ChartWrapper({
            chartType: 'LineChart',
            containerId: 'volatilityChart',
            options: { pointSize: 4, title: 'TC Volatility' },
            view: { columns: [0, 5]}
        });
        
         var kFactorChart = new google.visualization.ChartWrapper({
            chartType: 'LineChart',
            containerId: 'kFactorChart',
            options: { pointSize: 4, title: 'ELO K-Factor' },
            view: { columns: [0, 6]}
        });

        var ratingsDiffChart = new google.visualization.ChartWrapper({
            chartType: 'AreaChart',
            containerId: 'ratingsDiffChart',
            options: { pointSize: 4, title: 'TC & ELO Ratings Differences' },
            view: { columns: [0, 3, 4]}
        });
        
        var parseDate = function(input) {
            var parts = input.match( /(\d+)/g );
            return new Date(parts[0], parts[1] - 1, parts[2]); // months are 0-based
        };

        var data = new google.visualization.DataTable();
        data.addColumn('date', 'Round');
        data.addColumn('number', 'TopCoder Rating');
        data.addColumn('number', 'ELO Rating');
        data.addColumn('number', 'TopCoder Rating Diff');
        data.addColumn('number', 'ELO Rating Diff');
        data.addColumn('number', 'TopCoder Volatility');
        data.addColumn('number', 'Elo K-Factor');
        data.addRows([
            @foreach (var rr in Model.RoundResults)
            {
                <text> [parseDate('@rr.Round.Date.ToString("yyyy-MM-dd")'), @rr.Tc_NewRating, @rr.Elo_NewRating, @rr.Tc_RatingDiff, @rr.Elo_RatingDiff, @rr.Tc_NewVolatility, @rr.Elo_NewKFactor] </text>@(rr != Model.RoundResults.Last() ? "," : string.Empty)
            }
        ]);

        dashboard
            .bind(control, ratingsChart)
            .bind(control, ratingsDiffChart)
            .bind(control, volatilityChart)
            .bind(control, kFactorChart);
        
        dashboard.draw(data);
    });
</script>

<script type="text/javascript">
    $(function () {
        $('.coder-col').remove();
    });
</script>


<h2>Coder @Model.Coder.Handle</h2>

@{ Html.RenderPartial("CodersTablePart", new [] { Model.Coder }); }

<h3>Coder's Timeline</h3>

<div id="dashboard">
    <div id="control" style="width: 50%; height: 70px; margin: auto;"></div>
    <div id="volatilityChart" style="width: 50%; height: 400px; float: right;"></div>
    <div id="ratingsChart" style="width: 50%; height: 400px;"></div>
    <div id="kFactorChart" style="width: 50%; height: 400px; float: right;"></div>
    <div id="ratingsDiffChart" style="width: 50%; height: 400px;"></div>
</div>

<h3>Coder's Round Results</h3>

@{ Html.RenderPartial("RoundResultsTablePart", Model.RoundResults); }
