//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "FK_CoderId", "Coder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TopCoder.Analysis.Data.Coder), "RoundResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TopCoder.Analysis.Data.RoundResult), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_FirstRoundId", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TopCoder.Analysis.Data.Round), "Coder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TopCoder.Analysis.Data.Coder), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_LastRoundId", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TopCoder.Analysis.Data.Round), "Coder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TopCoder.Analysis.Data.Coder), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_RoundId", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TopCoder.Analysis.Data.Round), "RoundResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TopCoder.Analysis.Data.RoundResult), true)]

#endregion

namespace TopCoder.Analysis.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TcAnalysisDataModel : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TcAnalysisDataModel object using the connection string found in the 'TcAnalysisDataModel' section of the application configuration file.
        /// </summary>
        public TcAnalysisDataModel() : base("name=TcAnalysisDataModel", "TcAnalysisDataModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TcAnalysisDataModel object.
        /// </summary>
        public TcAnalysisDataModel(string connectionString) : base(connectionString, "TcAnalysisDataModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TcAnalysisDataModel object.
        /// </summary>
        public TcAnalysisDataModel(EntityConnection connection) : base(connection, "TcAnalysisDataModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Coder> Coders
        {
            get
            {
                if ((_Coders == null))
                {
                    _Coders = base.CreateObjectSet<Coder>("Coders");
                }
                return _Coders;
            }
        }
        private ObjectSet<Coder> _Coders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoundResult> RoundResults
        {
            get
            {
                if ((_RoundResults == null))
                {
                    _RoundResults = base.CreateObjectSet<RoundResult>("RoundResults");
                }
                return _RoundResults;
            }
        }
        private ObjectSet<RoundResult> _RoundResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Round> Rounds
        {
            get
            {
                if ((_Rounds == null))
                {
                    _Rounds = base.CreateObjectSet<Round>("Rounds");
                }
                return _Rounds;
            }
        }
        private ObjectSet<Round> _Rounds;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Coders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCoders(Coder coder)
        {
            base.AddObject("Coders", coder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RoundResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoundResults(RoundResult roundResult)
        {
            base.AddObject("RoundResults", roundResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rounds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRounds(Round round)
        {
            base.AddObject("Rounds", round);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Coder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Coder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Coder object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="handle">Initial value of the Handle property.</param>
        /// <param name="firstRoundId">Initial value of the FirstRoundId property.</param>
        /// <param name="lastRoundId">Initial value of the LastRoundId property.</param>
        /// <param name="roundsCount">Initial value of the RoundsCount property.</param>
        /// <param name="rating">Initial value of the Rating property.</param>
        /// <param name="volatility">Initial value of the Volatility property.</param>
        public static Coder CreateCoder(global::System.Int32 id, global::System.String handle, global::System.Int32 firstRoundId, global::System.Int32 lastRoundId, global::System.Int32 roundsCount, global::System.Int32 rating, global::System.Int32 volatility)
        {
            Coder coder = new Coder();
            coder.Id = id;
            coder.Handle = handle;
            coder.FirstRoundId = firstRoundId;
            coder.LastRoundId = lastRoundId;
            coder.RoundsCount = roundsCount;
            coder.Rating = rating;
            coder.Volatility = volatility;
            return coder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Handle
        {
            get
            {
                return _Handle;
            }
            set
            {
                OnHandleChanging(value);
                ReportPropertyChanging("Handle");
                _Handle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Handle");
                OnHandleChanged();
            }
        }
        private global::System.String _Handle;
        partial void OnHandleChanging(global::System.String value);
        partial void OnHandleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FirstRoundId
        {
            get
            {
                return _FirstRoundId;
            }
            set
            {
                OnFirstRoundIdChanging(value);
                ReportPropertyChanging("FirstRoundId");
                _FirstRoundId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstRoundId");
                OnFirstRoundIdChanged();
            }
        }
        private global::System.Int32 _FirstRoundId;
        partial void OnFirstRoundIdChanging(global::System.Int32 value);
        partial void OnFirstRoundIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastRoundId
        {
            get
            {
                return _LastRoundId;
            }
            set
            {
                OnLastRoundIdChanging(value);
                ReportPropertyChanging("LastRoundId");
                _LastRoundId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastRoundId");
                OnLastRoundIdChanged();
            }
        }
        private global::System.Int32 _LastRoundId;
        partial void OnLastRoundIdChanging(global::System.Int32 value);
        partial void OnLastRoundIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoundsCount
        {
            get
            {
                return _RoundsCount;
            }
            set
            {
                OnRoundsCountChanging(value);
                ReportPropertyChanging("RoundsCount");
                _RoundsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoundsCount");
                OnRoundsCountChanged();
            }
        }
        private global::System.Int32 _RoundsCount;
        partial void OnRoundsCountChanging(global::System.Int32 value);
        partial void OnRoundsCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private global::System.Int32 _Rating;
        partial void OnRatingChanging(global::System.Int32 value);
        partial void OnRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Volatility
        {
            get
            {
                return _Volatility;
            }
            set
            {
                OnVolatilityChanging(value);
                ReportPropertyChanging("Volatility");
                _Volatility = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volatility");
                OnVolatilityChanged();
            }
        }
        private global::System.Int32 _Volatility;
        partial void OnVolatilityChanging(global::System.Int32 value);
        partial void OnVolatilityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CoderId", "RoundResult")]
        public EntityCollection<RoundResult> RoundResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoundResult>("Model.FK_CoderId", "RoundResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoundResult>("Model.FK_CoderId", "RoundResult", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FirstRoundId", "Round")]
        public Round FirstRound
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.FK_FirstRoundId", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.FK_FirstRoundId", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> FirstRoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.FK_FirstRoundId", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("Model.FK_FirstRoundId", "Round", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_LastRoundId", "Round")]
        public Round LastRound
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.FK_LastRoundId", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.FK_LastRoundId", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> LastRoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.FK_LastRoundId", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("Model.FK_LastRoundId", "Round", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Round")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Round : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Round object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="totalCodersCount">Initial value of the TotalCodersCount property.</param>
        /// <param name="divOneCodersCount">Initial value of the DivOneCodersCount property.</param>
        /// <param name="divTwoCodersCount">Initial value of the DivTwoCodersCount property.</param>
        /// <param name="divOneCompetitionFactor">Initial value of the DivOneCompetitionFactor property.</param>
        /// <param name="divTwoCompetitionFactor">Initial value of the DivTwoCompetitionFactor property.</param>
        public static Round CreateRound(global::System.Int32 id, global::System.String name, global::System.DateTime date, global::System.Int32 totalCodersCount, global::System.Int32 divOneCodersCount, global::System.Int32 divTwoCodersCount, global::System.Double divOneCompetitionFactor, global::System.Double divTwoCompetitionFactor)
        {
            Round round = new Round();
            round.Id = id;
            round.Name = name;
            round.Date = date;
            round.TotalCodersCount = totalCodersCount;
            round.DivOneCodersCount = divOneCodersCount;
            round.DivTwoCodersCount = divTwoCodersCount;
            round.DivOneCompetitionFactor = divOneCompetitionFactor;
            round.DivTwoCompetitionFactor = divTwoCompetitionFactor;
            return round;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalCodersCount
        {
            get
            {
                return _TotalCodersCount;
            }
            set
            {
                OnTotalCodersCountChanging(value);
                ReportPropertyChanging("TotalCodersCount");
                _TotalCodersCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalCodersCount");
                OnTotalCodersCountChanged();
            }
        }
        private global::System.Int32 _TotalCodersCount;
        partial void OnTotalCodersCountChanging(global::System.Int32 value);
        partial void OnTotalCodersCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DivOneCodersCount
        {
            get
            {
                return _DivOneCodersCount;
            }
            set
            {
                OnDivOneCodersCountChanging(value);
                ReportPropertyChanging("DivOneCodersCount");
                _DivOneCodersCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivOneCodersCount");
                OnDivOneCodersCountChanged();
            }
        }
        private global::System.Int32 _DivOneCodersCount;
        partial void OnDivOneCodersCountChanging(global::System.Int32 value);
        partial void OnDivOneCodersCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DivTwoCodersCount
        {
            get
            {
                return _DivTwoCodersCount;
            }
            set
            {
                OnDivTwoCodersCountChanging(value);
                ReportPropertyChanging("DivTwoCodersCount");
                _DivTwoCodersCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivTwoCodersCount");
                OnDivTwoCodersCountChanged();
            }
        }
        private global::System.Int32 _DivTwoCodersCount;
        partial void OnDivTwoCodersCountChanging(global::System.Int32 value);
        partial void OnDivTwoCodersCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DivOneCompetitionFactor
        {
            get
            {
                return _DivOneCompetitionFactor;
            }
            set
            {
                OnDivOneCompetitionFactorChanging(value);
                ReportPropertyChanging("DivOneCompetitionFactor");
                _DivOneCompetitionFactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivOneCompetitionFactor");
                OnDivOneCompetitionFactorChanged();
            }
        }
        private global::System.Double _DivOneCompetitionFactor;
        partial void OnDivOneCompetitionFactorChanging(global::System.Double value);
        partial void OnDivOneCompetitionFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DivTwoCompetitionFactor
        {
            get
            {
                return _DivTwoCompetitionFactor;
            }
            set
            {
                OnDivTwoCompetitionFactorChanging(value);
                ReportPropertyChanging("DivTwoCompetitionFactor");
                _DivTwoCompetitionFactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivTwoCompetitionFactor");
                OnDivTwoCompetitionFactorChanged();
            }
        }
        private global::System.Double _DivTwoCompetitionFactor;
        partial void OnDivTwoCompetitionFactorChanging(global::System.Double value);
        partial void OnDivTwoCompetitionFactorChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FirstRoundId", "Coder")]
        public EntityCollection<Coder> Coders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Coder>("Model.FK_FirstRoundId", "Coder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Coder>("Model.FK_FirstRoundId", "Coder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_LastRoundId", "Coder")]
        public EntityCollection<Coder> Coders1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Coder>("Model.FK_LastRoundId", "Coder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Coder>("Model.FK_LastRoundId", "Coder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_RoundId", "RoundResult")]
        public EntityCollection<RoundResult> RoundResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoundResult>("Model.FK_RoundId", "RoundResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoundResult>("Model.FK_RoundId", "RoundResult", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="RoundResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoundResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoundResult object.
        /// </summary>
        /// <param name="roundId">Initial value of the RoundId property.</param>
        /// <param name="coderId">Initial value of the CoderId property.</param>
        /// <param name="division">Initial value of the Division property.</param>
        /// <param name="divisionRank">Initial value of the DivisionRank property.</param>
        /// <param name="points">Initial value of the Points property.</param>
        /// <param name="isRated">Initial value of the IsRated property.</param>
        /// <param name="numberOfRatings">Initial value of the NumberOfRatings property.</param>
        /// <param name="tc_Weight">Initial value of the Tc_Weight property.</param>
        /// <param name="tc_KFactor">Initial value of the Tc_KFactor property.</param>
        /// <param name="tc_ExpectedRank">Initial value of the Tc_ExpectedRank property.</param>
        /// <param name="oldRating">Initial value of the OldRating property.</param>
        /// <param name="newRating">Initial value of the NewRating property.</param>
        /// <param name="oldVolatility">Initial value of the OldVolatility property.</param>
        /// <param name="newVolatility">Initial value of the NewVolatility property.</param>
        public static RoundResult CreateRoundResult(global::System.Int32 roundId, global::System.Int32 coderId, global::System.Int32 division, global::System.Int32 divisionRank, global::System.Double points, global::System.Boolean isRated, global::System.Int32 numberOfRatings, global::System.Double tc_Weight, global::System.Double tc_KFactor, global::System.Double tc_ExpectedRank, global::System.Int32 oldRating, global::System.Int32 newRating, global::System.Int32 oldVolatility, global::System.Int32 newVolatility)
        {
            RoundResult roundResult = new RoundResult();
            roundResult.RoundId = roundId;
            roundResult.CoderId = coderId;
            roundResult.Division = division;
            roundResult.DivisionRank = divisionRank;
            roundResult.Points = points;
            roundResult.IsRated = isRated;
            roundResult.NumberOfRatings = numberOfRatings;
            roundResult.Tc_Weight = tc_Weight;
            roundResult.Tc_KFactor = tc_KFactor;
            roundResult.Tc_ExpectedRank = tc_ExpectedRank;
            roundResult.OldRating = oldRating;
            roundResult.NewRating = newRating;
            roundResult.OldVolatility = oldVolatility;
            roundResult.NewVolatility = newVolatility;
            return roundResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoundId
        {
            get
            {
                return _RoundId;
            }
            set
            {
                if (_RoundId != value)
                {
                    OnRoundIdChanging(value);
                    ReportPropertyChanging("RoundId");
                    _RoundId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoundId");
                    OnRoundIdChanged();
                }
            }
        }
        private global::System.Int32 _RoundId;
        partial void OnRoundIdChanging(global::System.Int32 value);
        partial void OnRoundIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CoderId
        {
            get
            {
                return _CoderId;
            }
            set
            {
                if (_CoderId != value)
                {
                    OnCoderIdChanging(value);
                    ReportPropertyChanging("CoderId");
                    _CoderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CoderId");
                    OnCoderIdChanged();
                }
            }
        }
        private global::System.Int32 _CoderId;
        partial void OnCoderIdChanging(global::System.Int32 value);
        partial void OnCoderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Division
        {
            get
            {
                return _Division;
            }
            set
            {
                OnDivisionChanging(value);
                ReportPropertyChanging("Division");
                _Division = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Division");
                OnDivisionChanged();
            }
        }
        private global::System.Int32 _Division;
        partial void OnDivisionChanging(global::System.Int32 value);
        partial void OnDivisionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DivisionRank
        {
            get
            {
                return _DivisionRank;
            }
            set
            {
                OnDivisionRankChanging(value);
                ReportPropertyChanging("DivisionRank");
                _DivisionRank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionRank");
                OnDivisionRankChanged();
            }
        }
        private global::System.Int32 _DivisionRank;
        partial void OnDivisionRankChanging(global::System.Int32 value);
        partial void OnDivisionRankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Points
        {
            get
            {
                return _Points;
            }
            set
            {
                OnPointsChanging(value);
                ReportPropertyChanging("Points");
                _Points = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Points");
                OnPointsChanged();
            }
        }
        private global::System.Double _Points;
        partial void OnPointsChanging(global::System.Double value);
        partial void OnPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRated
        {
            get
            {
                return _IsRated;
            }
            set
            {
                OnIsRatedChanging(value);
                ReportPropertyChanging("IsRated");
                _IsRated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRated");
                OnIsRatedChanged();
            }
        }
        private global::System.Boolean _IsRated;
        partial void OnIsRatedChanging(global::System.Boolean value);
        partial void OnIsRatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfRatings
        {
            get
            {
                return _NumberOfRatings;
            }
            set
            {
                OnNumberOfRatingsChanging(value);
                ReportPropertyChanging("NumberOfRatings");
                _NumberOfRatings = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfRatings");
                OnNumberOfRatingsChanged();
            }
        }
        private global::System.Int32 _NumberOfRatings;
        partial void OnNumberOfRatingsChanging(global::System.Int32 value);
        partial void OnNumberOfRatingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Tc_Weight
        {
            get
            {
                return _Tc_Weight;
            }
            set
            {
                OnTc_WeightChanging(value);
                ReportPropertyChanging("Tc_Weight");
                _Tc_Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tc_Weight");
                OnTc_WeightChanged();
            }
        }
        private global::System.Double _Tc_Weight;
        partial void OnTc_WeightChanging(global::System.Double value);
        partial void OnTc_WeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Tc_KFactor
        {
            get
            {
                return _Tc_KFactor;
            }
            set
            {
                OnTc_KFactorChanging(value);
                ReportPropertyChanging("Tc_KFactor");
                _Tc_KFactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tc_KFactor");
                OnTc_KFactorChanged();
            }
        }
        private global::System.Double _Tc_KFactor;
        partial void OnTc_KFactorChanging(global::System.Double value);
        partial void OnTc_KFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Tc_ExpectedRank
        {
            get
            {
                return _Tc_ExpectedRank;
            }
            set
            {
                OnTc_ExpectedRankChanging(value);
                ReportPropertyChanging("Tc_ExpectedRank");
                _Tc_ExpectedRank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tc_ExpectedRank");
                OnTc_ExpectedRankChanged();
            }
        }
        private global::System.Double _Tc_ExpectedRank;
        partial void OnTc_ExpectedRankChanging(global::System.Double value);
        partial void OnTc_ExpectedRankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OldRating
        {
            get
            {
                return _OldRating;
            }
            set
            {
                OnOldRatingChanging(value);
                ReportPropertyChanging("OldRating");
                _OldRating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OldRating");
                OnOldRatingChanged();
            }
        }
        private global::System.Int32 _OldRating;
        partial void OnOldRatingChanging(global::System.Int32 value);
        partial void OnOldRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NewRating
        {
            get
            {
                return _NewRating;
            }
            set
            {
                OnNewRatingChanging(value);
                ReportPropertyChanging("NewRating");
                _NewRating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewRating");
                OnNewRatingChanged();
            }
        }
        private global::System.Int32 _NewRating;
        partial void OnNewRatingChanging(global::System.Int32 value);
        partial void OnNewRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OldVolatility
        {
            get
            {
                return _OldVolatility;
            }
            set
            {
                OnOldVolatilityChanging(value);
                ReportPropertyChanging("OldVolatility");
                _OldVolatility = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OldVolatility");
                OnOldVolatilityChanged();
            }
        }
        private global::System.Int32 _OldVolatility;
        partial void OnOldVolatilityChanging(global::System.Int32 value);
        partial void OnOldVolatilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NewVolatility
        {
            get
            {
                return _NewVolatility;
            }
            set
            {
                OnNewVolatilityChanging(value);
                ReportPropertyChanging("NewVolatility");
                _NewVolatility = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewVolatility");
                OnNewVolatilityChanged();
            }
        }
        private global::System.Int32 _NewVolatility;
        partial void OnNewVolatilityChanging(global::System.Int32 value);
        partial void OnNewVolatilityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CoderId", "Coder")]
        public Coder Coder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coder>("Model.FK_CoderId", "Coder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coder>("Model.FK_CoderId", "Coder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Coder> CoderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coder>("Model.FK_CoderId", "Coder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Coder>("Model.FK_CoderId", "Coder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_RoundId", "Round")]
        public Round Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.FK_RoundId", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.FK_RoundId", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Model.FK_RoundId", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("Model.FK_RoundId", "Round", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
